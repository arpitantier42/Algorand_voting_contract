{
    "hints": {
        "Register_proposal(string,string,uint64,uint64)(string,string,uint64,uint64)": {
            "structs": {
                "output": {
                    "name": "Proposal_Record",
                    "elements": [
                        [
                            "proposal_id",
                            "string"
                        ],
                        [
                            "proposal_name",
                            "string"
                        ],
                        [
                            "asset_count",
                            "uint64"
                        ],
                        [
                            "Amount",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "RegisterQues(string,string,string)(string,string,string)": {
            "structs": {
                "output": {
                    "name": "Question_store",
                    "elements": [
                        [
                            "proposal_id",
                            "string"
                        ],
                        [
                            "question_id",
                            "string"
                        ],
                        [
                            "question_name",
                            "string"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "Registred_user_per_proposal(string,string)(string,string)": {
            "structs": {
                "output": {
                    "name": "User_per_proposal_record",
                    "elements": [
                        [
                            "proposal_id",
                            "string"
                        ],
                        [
                            "user_id",
                            "string"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "asset_register(string,string)(string,string)": {
            "structs": {
                "output": {
                    "name": "asset_store",
                    "elements": [
                        [
                            "proposal_id",
                            "string"
                        ],
                        [
                            "asset_id",
                            "string"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "Register_user_asset(string,string,string,uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "Voting_Record(string,string,uint64,string,uint64)(string,uint64,uint64,string)": {
            "structs": {
                "output": {
                    "name": "Response_store",
                    "elements": [
                        [
                            "user_id",
                            "string"
                        ],
                        [
                            "User_Token",
                            "uint64"
                        ],
                        [
                            "user_response",
                            "uint64"
                        ],
                        [
                            "question",
                            "string"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "token_buy(string,string,string,uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "token_sell(string,string,string,uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "Result(string,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "read_result(string,string)(string,string,uint64)": {
            "structs": {
                "output": {
                    "name": "Result_store",
                    "elements": [
                        [
                            "proposal_id",
                            "string"
                        ],
                        [
                            "question_id",
                            "string"
                        ],
                        [
                            "result",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "option_1()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "read_remaining()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "option_2()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "option_3()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "option_4()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "option_5()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "option_6()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "option_7()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "option_8()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "option_9()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "option_10()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "read_proposal_store(string)(string,string,uint64,uint64)": {
            "structs": {
                "output": {
                    "name": "Proposal_Record",
                    "elements": [
                        [
                            "proposal_id",
                            "string"
                        ],
                        [
                            "proposal_name",
                            "string"
                        ],
                        [
                            "asset_count",
                            "uint64"
                        ],
                        [
                            "Amount",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "read_asset_id(string)(string,string)": {
            "structs": {
                "output": {
                    "name": "asset_store",
                    "elements": [
                        [
                            "proposal_id",
                            "string"
                        ],
                        [
                            "asset_id",
                            "string"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "read_user_proposal_store(string,string)(string,string)": {
            "structs": {
                "output": {
                    "name": "User_per_proposal_record",
                    "elements": [
                        [
                            "proposal_id",
                            "string"
                        ],
                        [
                            "user_id",
                            "string"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "read_user_asset_store(string,string,string)(string,string,uint64)": {
            "structs": {
                "output": {
                    "name": "User_asset_store",
                    "elements": [
                        [
                            "user_id",
                            "string"
                        ],
                        [
                            "asset_id",
                            "string"
                        ],
                        [
                            "User_Token",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "read_user_response(string,string,string)(string,uint64,uint64,string)": {
            "structs": {
                "output": {
                    "name": "Response_store",
                    "elements": [
                        [
                            "user_id",
                            "string"
                        ],
                        [
                            "User_Token",
                            "uint64"
                        ],
                        [
                            "user_response",
                            "uint64"
                        ],
                        [
                            "question",
                            "string"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 14
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asset_amount_chk": {
                    "type": "uint64",
                    "key": "asset_amount_chk",
                    "descr": ""
                },
                "asset_amount_str": {
                    "type": "uint64",
                    "key": "asset_amount_str",
                    "descr": ""
                },
                "option1": {
                    "type": "uint64",
                    "key": "option1",
                    "descr": ""
                },
                "option10": {
                    "type": "uint64",
                    "key": "option10",
                    "descr": ""
                },
                "option2": {
                    "type": "uint64",
                    "key": "option2",
                    "descr": ""
                },
                "option3": {
                    "type": "uint64",
                    "key": "option3",
                    "descr": ""
                },
                "option4": {
                    "type": "uint64",
                    "key": "option4",
                    "descr": ""
                },
                "option5": {
                    "type": "uint64",
                    "key": "option5",
                    "descr": ""
                },
                "option6": {
                    "type": "uint64",
                    "key": "option6",
                    "descr": ""
                },
                "option7": {
                    "type": "uint64",
                    "key": "option7",
                    "descr": ""
                },
                "option8": {
                    "type": "uint64",
                    "key": "option8",
                    "descr": ""
                },
                "option9": {
                    "type": "uint64",
                    "key": "option9",
                    "descr": ""
                },
                "response": {
                    "type": "uint64",
                    "key": "response",
                    "descr": ""
                },
                "user_amount_chk": {
                    "type": "uint64",
                    "key": "user_amount_chk",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Voting_Contract_fn_test",
        "methods": [
            {
                "name": "Register_proposal",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "proposal_name"
                    },
                    {
                        "type": "uint64",
                        "name": "asset_count"
                    },
                    {
                        "type": "uint64",
                        "name": "Amount"
                    }
                ],
                "returns": {
                    "type": "(string,string,uint64,uint64)"
                }
            },
            {
                "name": "RegisterQues",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "question_id"
                    },
                    {
                        "type": "string",
                        "name": "question"
                    }
                ],
                "returns": {
                    "type": "(string,string,string)"
                }
            },
            {
                "name": "Registred_user_per_proposal",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "user_id"
                    }
                ],
                "returns": {
                    "type": "(string,string)"
                }
            },
            {
                "name": "asset_register",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "asset_id"
                    }
                ],
                "returns": {
                    "type": "(string,string)"
                }
            },
            {
                "name": "Register_user_asset",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "user_id"
                    },
                    {
                        "type": "string",
                        "name": "asset_id"
                    },
                    {
                        "type": "uint64",
                        "name": "token_count"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "Voting_Record",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "user_id"
                    },
                    {
                        "type": "uint64",
                        "name": "token_count"
                    },
                    {
                        "type": "string",
                        "name": "question_id"
                    },
                    {
                        "type": "uint64",
                        "name": "user_response"
                    }
                ],
                "returns": {
                    "type": "(string,uint64,uint64,string)"
                }
            },
            {
                "name": "token_buy",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "user_id"
                    },
                    {
                        "type": "string",
                        "name": "question_id"
                    },
                    {
                        "type": "uint64",
                        "name": "user_response"
                    },
                    {
                        "type": "uint64",
                        "name": "token_buy"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "token_sell",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "user_id"
                    },
                    {
                        "type": "string",
                        "name": "question_id"
                    },
                    {
                        "type": "uint64",
                        "name": "user_response"
                    },
                    {
                        "type": "uint64",
                        "name": "token_sell"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "Result",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "question_id"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "read_result",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "question_id"
                    }
                ],
                "returns": {
                    "type": "(string,string,uint64)"
                }
            },
            {
                "name": "option_1",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "read_remaining",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "option_2",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "option_3",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "option_4",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "option_5",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "option_6",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "option_7",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "option_8",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "option_9",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "option_10",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "read_proposal_store",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    }
                ],
                "returns": {
                    "type": "(string,string,uint64,uint64)"
                }
            },
            {
                "name": "read_asset_id",
                "args": [
                    {
                        "type": "string",
                        "name": "asset_id"
                    }
                ],
                "returns": {
                    "type": "(string,string)"
                }
            },
            {
                "name": "read_user_proposal_store",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "user_id"
                    }
                ],
                "returns": {
                    "type": "(string,string)"
                }
            },
            {
                "name": "read_user_asset_store",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal_id"
                    },
                    {
                        "type": "string",
                        "name": "user_id"
                    },
                    {
                        "type": "string",
                        "name": "asset_id"
                    }
                ],
                "returns": {
                    "type": "(string,string,uint64)"
                }
            },
            {
                "name": "read_user_response",
                "args": [
                    {
                        "type": "string",
                        "name": "user_id"
                    },
                    {
                        "type": "string",
                        "name": "question_id"
                    },
                    {
                        "type": "string",
                        "name": "proposal_id"
                    }
                ],
                "returns": {
                    "type": "(string,uint64,uint64,string)"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}